version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15
    environment:
      - POSTGRES_DB=treetalk
      - POSTGRES_USER=treetalk
      - POSTGRES_PASSWORD=${DB_PASSWORD:-treetalk_password_change_me}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U treetalk"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis Cache
  cache:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes

  # FastAPI Backend
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://treetalk:${DB_PASSWORD:-treetalk_password_change_me}@db:5432/treetalk
      - REDIS_URL=redis://cache:6379/0
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - FAMILYSEARCH_CLIENT_ID=${FAMILYSEARCH_CLIENT_ID}
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_started
    volumes:
      - ./uploads:/app/uploads
      - ./backend:/app/backend
    command: uvicorn backend.main:app --host 0.0.0.0 --port 8000 --reload

  # Streamlit Frontend
  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    ports:
      - "8501:8501"
    environment:
      - BACKEND_URL=http://backend:8000
    depends_on:
      - backend
    volumes:
      - ./frontend:/app/frontend
    command: streamlit run frontend/main.py --server.port=8501 --server.address=0.0.0.0

volumes:
  postgres_data:
  redis_data: